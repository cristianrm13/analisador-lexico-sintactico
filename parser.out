Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE
Rule 2     print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

Terminals, with rules where they appear

DOT                  : 2 2
EQUALS               : 1
FOR                  : 1
ID                   : 1 1 1 2
INT                  : 1
LBRACE               : 1
LESS_EQUAL           : 1
LPAREN               : 1 2
NUMBER               : 1 1 2
OUT                  : 2
PLUS                 : 2
PLUSPLUS             : 1
PRINTLN              : 2
RBRACE               : 1
RPAREN               : 1 2
SEMICOLON            : 1 1 2
STRING               : 2
error                : 

Nonterminals, with rules where they appear

print_statement      : 1
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    FOR             shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> FOR . LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    LPAREN          shift and go to state 3


state 3

    (1) statement -> FOR LPAREN . INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    INT             shift and go to state 4


state 4

    (1) statement -> FOR LPAREN INT . ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    ID              shift and go to state 5


state 5

    (1) statement -> FOR LPAREN INT ID . EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    EQUALS          shift and go to state 6


state 6

    (1) statement -> FOR LPAREN INT ID EQUALS . NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    NUMBER          shift and go to state 7


state 7

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER . SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    SEMICOLON       shift and go to state 8


state 8

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON . ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    ID              shift and go to state 9


state 9

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID . LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    LESS_EQUAL      shift and go to state 10


state 10

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL . NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    NUMBER          shift and go to state 11


state 11

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER . SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    SEMICOLON       shift and go to state 12


state 12

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON . ID PLUSPLUS RPAREN LBRACE print_statement RBRACE

    ID              shift and go to state 13


state 13

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID . PLUSPLUS RPAREN LBRACE print_statement RBRACE

    PLUSPLUS        shift and go to state 14


state 14

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS . RPAREN LBRACE print_statement RBRACE

    RPAREN          shift and go to state 15


state 15

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN . LBRACE print_statement RBRACE

    LBRACE          shift and go to state 16


state 16

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE . print_statement RBRACE
    (2) print_statement -> . ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    ID              shift and go to state 17

    print_statement                shift and go to state 18

state 17

    (2) print_statement -> ID . DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    DOT             shift and go to state 19


state 18

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement . RBRACE

    RBRACE          shift and go to state 20


state 19

    (2) print_statement -> ID DOT . OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    OUT             shift and go to state 21


state 20

    (1) statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE .

    $end            reduce using rule 1 (statement -> FOR LPAREN INT ID EQUALS NUMBER SEMICOLON ID LESS_EQUAL NUMBER SEMICOLON ID PLUSPLUS RPAREN LBRACE print_statement RBRACE .)


state 21

    (2) print_statement -> ID DOT OUT . DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    DOT             shift and go to state 22


state 22

    (2) print_statement -> ID DOT OUT DOT . PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    PRINTLN         shift and go to state 23


state 23

    (2) print_statement -> ID DOT OUT DOT PRINTLN . LPAREN STRING PLUS NUMBER RPAREN SEMICOLON

    LPAREN          shift and go to state 24


state 24

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN . STRING PLUS NUMBER RPAREN SEMICOLON

    STRING          shift and go to state 25


state 25

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING . PLUS NUMBER RPAREN SEMICOLON

    PLUS            shift and go to state 26


state 26

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS . NUMBER RPAREN SEMICOLON

    NUMBER          shift and go to state 27


state 27

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER . RPAREN SEMICOLON

    RPAREN          shift and go to state 28


state 28

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 29


state 29

    (2) print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON .

    RBRACE          reduce using rule 2 (print_statement -> ID DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMICOLON .)

